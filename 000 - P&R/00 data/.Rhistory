# 0. Packages and Setup ----
# install.packages("pacman")
library(pacman)
p_load(tidyverse,rio)
getwd()
setwd("G:/Meu Drive/00 GitHub/R-Introduction/000 - P&R/00 data")
# Remover notação científica
options(scipen=999)
mydata_1 <- import("dados_educ_ficticios_1.xlsx")
mydata_2 <- import("dados_educ_ficticios_2.xlsx")
View(mydata_1)
View(mydata_2)
# Merge data
mydata <- merge(mydata_1,mydata_2,by = "aluno")
View(mydata)
View(mydata)
ggplot( data = mydata , aes( x = sexo ) )
ggplot( data = mydata , aes( x = sexo ) )+
geom_bar()
ggplot( data = mydata , aes( x = sexo ) )+
geom_bar(fill="steelblue")+
scale_y_continuous(limits=c(0,10))+
scale_x_discrete()+
labs(title = "Frequência absoluta por sexo",
y="Frequência absoluta",x="")+
theme_bw()
ggplot( data = mydata , aes( x = sexo ) )+
geom_bar(fill="red")+
scale_y_continuous(limits=c(0,10))+
scale_x_discrete()+
labs(title = "Frequência absoluta por sexo",
y="Frequência absoluta",x="")+
theme_bw()
ggplot( data = mydata , aes( x = sexo ) )+
geom_bar(fill="steelblue")+
scale_y_continuous(limits=c(0,10))+
scale_x_discrete()+
labs(title = "Frequência absoluta por sexo",
y="Frequência absoluta",x="")+
theme_bw()
ggplot(data = mydata, aes(x = sexo, fill = raca))+
geom_bar()
ggplot(data = mydata, aes(x = sexo, fill = raca))+
geom_bar(stat = "count",position = position_dodge())
g1 <- ggplot(data = mydata, aes(x = sexo, fill = raca))+
geom_bar(stat = "count",position = position_dodge())
g1
g1 + labs(title = "Frequência absoluta por sexo",
y="Frequência absoluta",x="",fill="Raça")+
theme_bw()
ggplot( data = mydata , aes( x = faltas ) )+
geom_bar(fill="steelblue")+
scale_y_continuous(limits=c(0,5))+
scale_x_continuous(limits=c(0,10),breaks=seq(0,10,2))+
labs(title = "Frequência de faltas",
y="Frequência absoluta",x="")+
theme_bw()
ggplot( data = mydata , aes( x = nota ) )+
geom_histogram(col="blue")+
scale_y_continuous(limits = c(0,5),expand = c(0,0))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Frequência absoluta",x="Nota")+
theme_bw()
notas_aleatorias <- rnorm(n = 10000,mean = 5,sd = 2)
alunos <- 1:10000
mydata2 <- data.frame(alunos,notas_aleatorias)
View(mydata2)
View(mydata2)
ggplot( data = mydata2 , aes( x = notas_aleatorias ) )+
geom_histogram(col="blue")+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Frequência absoluta",x="Nota")+
theme_bw()
ggplot( data = mydata2 , aes( x = notas_aleatorias ) )+
geom_histogram(col="blue",bins=2)+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Frequência absoluta",x="Nota")+
theme_bw()
ggplot( data = mydata2 , aes( x = notas_aleatorias ) )+
geom_histogram(col="blue",bins=100)+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Frequência absoluta",x="Nota")+
theme_bw()
ggplot( data = mydata2 , aes( x = notas_aleatorias ) )+
geom_histogram(col="blue",bins=1000)+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Frequência absoluta",x="Nota")+
theme_bw()
ggplot( data = mydata2 , aes( x = notas_aleatorias ) )+
geom_histogram(col="blue",bins=100)+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Frequência absoluta",x="Nota")+
theme_bw()
ggplot( data = mydata2 , aes( x = notas_aleatorias ) )+
geom_density(col="blue",bins=100)+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Frequência absoluta",x="Nota")+
theme_bw()
ggplot( data = mydata2 , aes( x = notas_aleatorias ) )+
geom_density(col="blue",fill="steelblue",bins=100)+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Frequência absoluta",x="Nota")+
theme_bw()
ggplot( data = mydata2 , aes( x = notas_aleatorias ) )+
geom_boxplot(col="blue")+
scale_y_continuous()+
scale_x_continuous(limits = c(0,11),breaks = seq(0,12,2.5))+
labs(title = "Histograma da nota",
y="Frequência absoluta",x="Nota")+
theme_bw()
summary(mydata2$notas_aleatorias)
ggplot( data = mydata , aes( x = nse, y =  nota) )+
geom_point(col="blue")+
scale_y_continuous(limits = c(0,11))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Nota",x="NSE")+
theme_bw()
ggplot( data = mydata , aes( x = nse, y =  nota) )+
geom_point(col="blue",size=1.5)+
scale_y_continuous(limits = c(0,11))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Nota",x="NSE")+
theme_bw()
ggplot( data = mydata , aes( x = nse, y =  nota) )+
geom_point(col="blue",size=2)+
scale_y_continuous(limits = c(0,11))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Nota",x="NSE")+
theme_bw()
g2 <- ggplot( data = mydata , aes( x = nse, y =  nota) )+
geom_point(col="blue")+
scale_y_continuous(limits = c(0,11))+
scale_x_continuous(limits = c(0,11),expand = c(0,0))+
labs(title = "Histograma da nota",
y="Nota",x="NSE")+
theme_bw()
g2 + geom_smooth(method = "lm") # Linear Model
attach(mydata2)
summary(notas_aleatorias)
detach(mydata2)
summary(notas_aleatorias)
detach(mydata2)
summary(notas_aleatorias)
detach(mydata2)
detach(name = mydata)
summary(notas_aleatorias)
detach(mydata2)
summary(notas_aleatorias)
library(plotly)
plot_ly(data = mydata,
x = ~nse,
y = ~nota,
z = ~faltas,
color = ~sexo,
#type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(title = "NSE"),
yaxis = list(title = "Nota"),
zaxis = list(title = "Faltas"))
# Open and exclude NA observations
aux <- read_excel(file.choose())  # read the file
library(tidyverse)
library(dplyr)
library(cowplot)    # for theme_minimal_hgrid()
library(colorspace) # for darken()
library(ggrepel)    # for geom_text_repel()
library(readxl)
library(magrittr)
# Open and exclude NA observations
aux <- read_excel(file.choose())  # read the file
# install.packages("geobr")
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
p_load(geobr,ggplot2,sf,dplyr)
# Available data sets
datasets <- list_geobr()
datasets
View(datasets)
# We have to remove axis from the ggplot layers
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
# We have to remove axis from the ggplot layers
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
View(datasets)
datasets$years[3]
# Depict all the Brazilian States + Federal District, 2019
states <- read_state(year=2020)
View(states)
View(states[[6]][[1]])
ggplot() +
geom_sf(data=states, fill="#FFDB6D", color="#293352", size=.5, show.legend = FALSE) +
labs(subtitle="States of Brazil and Federal District, 2020", size=8) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=states, fill="#FFDB6D", color="#293352", size=.5, show.legend = FALSE) +
labs(subtitle="States of Brazil and Federal District, 2020", size=8) +
theme_minimal() +
no_axis
# Depict all the Brazilian States + Federal District, 1920
states <- read_state(year=1872)
ggplot() +
geom_sf(data=states, fill="#FFDB6D", color="#293352", size=.5, show.legend = FALSE) +
labs(subtitle="States of Brazil and Federal District, 1920", size=8) +
theme_minimal() +
no_axis
View(states)
# Depict all the Brazilian States + Federal District, 2019
states <- read_state(year=2020)
View(states)
#Intermediate units
meso <- read_intermediate_region(year=2019)
ggplot() +
geom_sf(data=meso, fill="#FFDB6D", color="#293352", size=.15, show.legend = FALSE) +
labs(subtitle="Intermediate Stats units of Brazil, 2019", size=8) +
theme_minimal() +
no_axis
# All municipalities in Brazil
muni <- read_municipality(year=2020)
ggplot() +
geom_sf(data=muni, fill="#FFDB6D", color="#293352", size=.15, show.legend = FALSE) +
labs(subtitle="Municipalities of Brazil, 2019", size=8) +
theme_minimal() +
no_axis
# All municipalities in the state of MG
muniMG <- read_municipality(code_muni= "MG", year=2020)
ggplot() +
geom_sf(data=muniMG, fill="#FFDB6D", color="#293352", size=.15, show.legend = FALSE) +
labs(subtitle="Municipalities of Rio de Janeiro, 2019", size=8) +
theme_minimal() +
no_axis
RMaps_Brazil <- import(file.choose())
RMaps_Brazil <- import(file.choose())
View(RMaps_Brazil)
# Compute density
data <- mutate(RMaps_Brazil, Popdens=Pop/AreaKm2)
View(data)
states <- read_state(year=2019)
states$name_state
states$name_state <- tolower(states$name_state)
states$name_state
data$State
data$State          <- tolower(data$State)
data$State
# join the databases
states <- dplyr::left_join(states, data, by = c("name_state" = "State"))
ggplot() +
geom_sf(data=states, aes(fill=Popdens), color= NA, size=.15) + #try color = "Grey"
labs(subtitle="Population Density (hab/Km2), Brazilian States, 2019", size=8) +
scale_fill_distiller(palette = "Reds", direction = 1, #default = -1
name="Population Density \n(hab/Km2), 2019", limits = c(0,600)) +
theme_minimal() +
no_axis +
coord_sf(xlim = c(-75, -32), ylim = c(-34.5, 7),expand=FALSE)
# install.package(pacman)
library(pacman)
p_load(tidyverse,rio,janitor,patchwork,geobr)
# To clean memory
rm(list=ls()) # Remove all objects
gc() # Garbage Clean
# Work directories
wd_outp_intror <- "G:/Meu Drive/00 GitHub/R-Introduction/A03 - Import and Tidy Data/02 outp"
wd_data_intror <- "G:/Meu Drive/00 GitHub/R-Introduction/000 - P&R/00 data/"
# Data censo
wd_data_censo <- "G:/Meu Drive/00 data/IBGE/CENSO/SETORES CENSO/"
# Population census
basico_SP2 <- import(file = paste0(wd_data_censo,"/SP_Exceto_a_Capital_20190207/CSV/Basico_SP2.csv"))
Pessoa03_SP <- import(file = paste0(wd_data_censo,"/SP_Exceto_a_Capital_20190207/CSV/Pessoa03_SP.csv"))
# Geographic data of SP State
geo_sp <- read_census_tract(code_tract = 35,year = 2010)
# Dimesions
dim(Pessoa03_SP)
# Dimesions
dim(Pessoa03_SP)
# Structure
str(Pessoa03_SP)
View(basico_SP2)
2,1
2.1
# Substituindo vírgulas por pontos (notação inglesa)
basico_SP2 <- basico_SP2 %>% mutate_all(~ gsub(",", ".", .))
# Transformando a variável renda para métrica
basico_SP2 <- basico_SP2 %>%  mutate(
V009 = as.numeric(V009)
)
basico_SP2 <- basico_SP2 %>% rename(
"code_tract" = Cod_setor,
"me_rend" = V009
)
# Selecionando apenas cod do setor e renda das pessoas
mydata1 <- basico_SP2 %>% select(code_tract,me_rend)
View(mydata1)
# Fazendo o mesmo com a base das pessoas
Pessoa03_SP <- Pessoa03_SP %>% mutate_all(~ gsub(",", ".", .))
Pessoa03_SP <- Pessoa03_SP %>% mutate(.,
qt_pessoas=as.numeric(V001),
qt_brancos = as.numeric(V002),
qt_pretos = as.numeric(V003),
qt_amarelos = as.numeric(V004),
qt_pardos = as.numeric(V005),
qt_indigena = as.numeric(V006),
)
Pessoa03_SP <- Pessoa03_SP %>% mutate(
p_PPI = (qt_pretos+qt_pardos+qt_indigena)/qt_pessoas,
p_negros = (qt_pretos+qt_pardos)/qt_pessoas,
p_amarelos = qt_amarelos/qt_pessoas,
p_indigena = qt_indigena/qt_pessoas,
) %>% rename(
"code_tract" = Cod_setor
)
mydata2 <- Pessoa03_SP %>% select(code_tract,p_negros,p_PPI,qt_pessoas)
mydata <- merge(mydata1,mydata2)
mydata <- merge(geo_sp,mydata, by = "code_tract")
mydata <- mydata %>% mutate(.,me_rend_cor = me_rend*1.8309)
summary(mydata$me_rend_cor)
mydata <- mydata %>% mutate(.,me_rend_cor = me_rend*1.8309)
mydata$me_renda2 <-  cut(mydata$me_rend_cor,
breaks = c(0,1000,2000,5000,10000,max(mydata$me_rend, na.rm = T)),
labels = c("0 - 1000", "1000 - 2000",
"2000 - 5000","5000 - 10000", "+ 10000"),
ordered_result = T)
mydata$p_PPI2 <-  cut(mydata$p_PPI,
breaks = c(0,.2,.3,.4,.5,max(mydata$p_PPI, na.rm = T)),
labels = c("0 - 20%", "20% - 30% ", "30% - 40%",
"40% - 50%", "+ 50%"),
ordered_result = T)
mydata <- mydata %>% filter(code_muni == 3513009)
View(mydata)
# We have to remove axis from the ggplot layers
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
# Mean of income
map_cotia_renda <- mydata %>% drop_na(me_renda2) %>%
ggplot() +
geom_sf(aes(fill = me_renda2), show.legend = T,color=NA) +
scale_fill_manual(name="Renda média \n em Reais (R$)",
values = rev(heat.colors(6, alpha = 1.0)))+
theme_minimal()+
labs(title = "Composição Econômica")+
no_axis
map_cotia_renda
# Proportion race
map_cotia_raca <- mydata %>% drop_na(p_PPI2) %>% ggplot() +
geom_sf(aes(fill = p_PPI2), show.legend = T,color=NA) +
scale_fill_manual(name="Proporção \n PPI",
values = rev(heat.colors(6, alpha = 1.0)))+
theme_minimal()+
labs(title = "Composição étnico-racial")+
no_axis
plt_map_renda_raca <- map_cotia_renda+map_cotia_raca+
plot_annotation(tag_levels = "A")
plt_map_renda_raca
# Save plot
dev.off()
getwd()
wd_outp_intror
pdf(file=paste0(wd_outp_intror,"plt_map_renda_raca.pdf"),
width = 10, height = 6)
# Work directories
wd_outp_intror <- "G:/Meu Drive/00 GitHub/R-Introduction/A05 - Visualize/02 outp"
# Save plot
dev.off()
pdf(file=paste0(wd_outp_intror,"plt_map_renda_raca.pdf"),
width = 10, height = 6)
plot(plt_map_renda_raca)
dev.off()
pdf(file=paste0(wd_outp_intror,"/plt_map_renda_raca.pdf"),
width = 10, height = 6)
plot(plt_map_renda_raca)
dev.off()
geo_schools <- read_schools(year = 2020)
View(geo_schools)
schools_cotia <- geo_schools %>% filter(name_muni == "Cotia")
View(schools_cotia)
map_cotia_renda
map_cotia_renda + geom_sf(data = schools_cotia,
color="black",size=1,shape=1)
# Olhem a minha escola
mySchool <- schools_cotia %>% filter(name_school %in% c("SIDRONIA NUNES PIRES",
"IDALINA GODINHO DA SILVA EM",
"IVO MARIO ISAAC PIRES PREFEITO EM"))
map_cotia_renda + geom_sf(data = mySchool,
color="black",size=1.5,shape=1)

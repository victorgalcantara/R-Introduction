ls()
idade <- c(22,34,30,26)
renda <- c(1200.5,1100.6,900.5,3200.5)
trabalha <- c(T,F,T,F)
typeof(nomes)
nomes = c("Aline","Rafael","Amadu","Mafougi")
# Criando um vetor
nomes = c("Aline","Rafael","Amadu","Mafougi")
# Observando o vetor
nomes
idade <- c(22,34,30,26)
renda <- c(1200.5,1100.6,900.5,3200.5)
trabalha <- c(T,F,T,F)
typeof(nomes)
typeof(idade)
typeof(renda)
typeof(trabalha)
idade <- c(22,34,30,26)
renda <- c(1200.5,1100.6,900.5,3200.5)
trabalha <- c(T,F,T,F)
class(nomes)
class(idade)
class(renda)
class(trabalha)
plot(idade)
meus_dados <- c(nome,idade,renda,trabalha)
# Criando um vetor
nome = c("Aline","Amadu","Flora","Mafougi")
# Observando o vetor
nome
meus_dados <- c(nome,idade,renda,trabalha)
meus_dados
meus_dados <- data.frame(nome,idade,renda,trabalha)
meus_dados
meus_dados <- data.frame(nome,idade,renda,trabalha)
meus_dados
class(meus_dados)
# Acessando informações na minha base de dados
meus_dados[1,1]
meus_dados[1,]
meus_dados[,"nome"]
meus_dados$nome
meus_dados[ , "nome" ] == "Amadu"
meus_dados$trabalha == T
meus_dados$renda > 2000
# install.packages(tidyverse)
library(tidyverse)
select(.data = meus_dados,nome)
filter(.data = meus_dados,.by = renda > 2000)
filter(.data = meus_dados,renda > 2000)
subset(x = meus_dados,select = "nome")
subset(x = meus_dados,subset = renda > 2000)
subset(x = meus_dados,select = renda > 2000)
rename(.data = meus_dados,trabalha="trab")
rename(.data = meus_dados,"trab"=trabalha)
mutate(.data = meus_dados,renda/2)
mutate(.data = meus_dados,ln_renda = log(renda))
2.7^7.090493
mutate(.data = meus_dados,ln_renda = log10(renda))
10^7.090493
10^3.079362
library(plotly)
# Criando os dados
x <- 1:10
y1 <- x
y2 <- x^2
y3 <- x^3
# Criando os gráficos individuais
trace1 <- list(
x = x,
y = y1,
type = "scatter",
mode = "lines",
name = "Linear"
)
trace2 <- list(
x = x,
y = y2,
type = "scatter",
mode = "markers",
name = "Quadrático"
)
trace3 <- list(
x = x,
y = y3,
type = "bar",
name = "Cúbico"
)
# Criando o subplot
subplot <- subplot(
list(trace1, trace2),
list(trace3),
nrows = 2,
heights = c(0.6, 0.4)
)
library(plotly)
# Criando os dados
x <- 1:10
y1 <- x
y2 <- x^2
y3 <- x^3
# Criando os gráficos individuais
trace1 <- list(
x = x,
y = y1,
type = "scatter",
mode = "lines",
name = "Linear"
)
trace2 <- list(
x = x,
y = y2,
type = "scatter",
mode = "markers",
name = "Quadrático"
)
trace3 <- list(
x = x,
y = y3,
type = "bar",
name = "Cúbico"
)
# Criando o subplot
subplot <- subplot(
list(trace1, trace2),
list(trace3),
nrows = 2,
heights = c(0.6, 0.4)
)
trace3
Scatter <- plot_ly(data = meus_dados,
x = ~idade,
y = ~renda,
color = ~Species,
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(title = "Comprimento da sépala"),
yaxis = list(title = "Comprimento da pétala"))
Scatter
Scatter <- plot_ly(data = meus_dados,
x = ~idade,
y = ~renda,
color = ~nome,
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(title = "Comprimento da sépala"),
yaxis = list(title = "Comprimento da pétala"))
Scatter
Scatter <- plot_ly(data = meus_dados,
x = ~idade,
y = ~renda,
color = ~nome,
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(title = "Idade"),
yaxis = list(title = "Renda"))
Scatter
meus_dados[,"educ"] <- c(12,9,16,10)
library(plotly)
Scatter <- plot_ly(data = meus_dados,
x = ~idade,
y = ~renda,
z = ~educ,
color = ~nome,
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(title = "Idade"),
yaxis = list(title = "Renda"),
zaxis = list(title = "Escolaridade"))
Scatter
Scatter <- plot_ly(data = meus_dados,
x = ~idade,
y = ~renda,
z = ~educ,
color = ~nome,
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(title = "Idade"),
yaxis = list(title = "Renda"))
Scatter
meus_dados
Scatter <- plot_ly(data = meus_dados,
x = ~idade,
y = ~renda,
z = ~educ,
color = ~nome,
#type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(title = "Idade"),
yaxis = list(title = "Renda"),
zaxis = list(title = "Escolaridade"))
Scatter
leaflet() %>% addTiles() %>% setView(-36.85,174.76, zoom = 17)
library(leaflet)
library(tidyverse)
leaflet() %>% addTiles() %>% setView(-36.85,174.76, zoom = 17)
leaflet() %>% addTiles() %>% setView(-36.8546,174.7623, zoom = 17)
leaflet() %>% addTiles() %>% setView(-36.8546,174.7623, zoom = 1)
leaflet() %>% addTiles() %>% setView(0,0, zoom = 1)
leaflet() %>% addTiles() %>% setView(100,0, zoom = 1)
leaflet() %>% addTiles() %>% setView(100,50, zoom = 1)
leaflet() %>% addTiles() %>% setView(172,-37, zoom = 1)
leaflet() %>% addTiles() %>% setView(175,-37, zoom = 1)
leaflet() %>% addTiles() %>% setView(175,-37, zoom = 20)
leaflet() %>% addTiles() %>% setView(175,-37, zoom = 15)
leaflet() %>% addTiles() %>% setView(175,-37, zoom = 10)
leaflet() %>% addTiles() %>% setView(175,-35, zoom = 10)
leaflet() %>% addTiles() %>% setView(175,-40, zoom = 10)
leaflet() %>% addTiles() %>% setView(175,-37, zoom = 10)
leaflet() %>% addTiles() %>% setView(174.7626,-36.8524, zoom = 10)
Fazendo um comentário no código
2+2
2+2
2+2
# Parte I - Teoria e prática
knitr::opts_chunk$set(echo = TRUE)
Aluno <- c("Beatriz","Danilo","Flora","Lara","Mateus")
Aluno  <- c("Beatriz","Danilo","Flora","Lara","Mateus")
Aluno
Aluno[3]
Aluno[3:5]
Escola <- c("Escola01","Escola01","Escola02","Escola02","Escola03")
Desempenho <- c(350,298,284,180,230)
Escola
Desempenho
dados <- data.frame(Aluno,Escola,Desempenho)
dados
read.table(file="G:\\Meu Drive\\00 GitHub\\R-Introduction\\A01 - Intro\\00 data\\meus_dados.csv",
sep = ",", # Especifique o separador
header = T # Especifique que a primeira linha é o nome das variáveis
)
# install.packages("rio")
library(rio)
import(file="G:\\Meu Drive\\00 GitHub\\R-Introduction\\A01 - Intro\\00 data\\meus_dados.csv")
names(enem2021_sp)
names(meus_dados)
names(dados)
2+3
2*3      # multiplicação
2^2      # potência
sqrt(16) # raíz quadrada / square roots
2+2*3
2+2*3^3
3^3
3 * 3 * 3
3 * 3 * 3 * 2
3 * 3 * 3 * 2 + 2
exp(1)   # exponencial - padrão: n de euler (e)
exp(2)
2^exp(1)
2^exp()
2^exp(1)
exp(2)
exp(2)
1 * 2^exp(1)
2 * 2^exp(1)
1 * 2^exp(2)
1 * 2^exp(1)
1 * exp(1)^2
exp(2)
1 * exp(1)^2
exp(3)
1 * exp(1)^3
40 * exp(1)^2
exp(2)
exp(x=2)
1 * exp(1)^1
1 * exp(1)^2
exp(x=2)
1 * exp(1)^2
log(10)  # logarítmo
exp(1)^2.302585
log(10)  # logarítmo
exp(1)^log(10)
exp(1)   # exponencial - padrão: n de euler (e)
exp(x=2)
1 * exp(1)^2
log(10)  # logarítmo
exp(1)^log(10)
log(100)  # logarítmo
exp(1)^log(100)
log2(16)
log2(16)
2^log(16)
log2(16)
2^log(16)
exp(1)^log(16)
log2(16)
log(16)
2^log2(16)
log2(16)
log2(16)
2+3      # soma
2*3      # multiplicação
2^2      # potência
sqrt(16) # raíz quadrada / square roots
16^(1/2)
exp(1)   # exponencial - padrão: n de euler (e)
exp(x=2)
1 * exp(1)^2
log(10)  # logarítmo
log2(16)
2^4
4%%2
3%%2
pi
# No python não tem isso!
pi-2
sqrt(x = 16) # raíz quadrada / square roots
exp(1)   # exponencial - padrão: n de euler (e)
log(10)  # logarítmo
log(x = 10)  # logarítmo
exp(x = 1)   # exponencial - padrão: n de euler (e)
log(x = 10)  # logarítmo
exp(x = 1)
log(x = 10)  # logarítmo
exp(1)
log(x = 10)  # logarítmo
log(x = 10)
exp(1)^log(x = 10)
exp(1)
log(x = 10)  # logarítmo
exp(1)^log(x = 10)
log(x = 10)
exp(1)
log2(16)
2^4
x <- 2
x = 3
x+3
x
x <- 1:10
y <- exp(1:10)
plot(x,y)
plot(x,y)
curve()
curve(x,y)
curve(x)
curve(expr = x,y)
curve(expr = exp(x))
plot(x,y)+
curve(expr = exp(x))
curve(expr = exp(x),n = 100)
curve(expr = exp(x),from = 0,to = 100)
x <- 1:100
y <- exp(1:100)
plot(x,y)
curve(expr = exp(x),from = 0,to = 100)
plot(x,y)
lines(x,y)
x <- 1:10
y <- exp(1:10)
plot(x,y)
lines(x,y)
x <- 1:10
y <- exp(1:10)
plot(x = x,y = y)
lines(x,y)
y <- log(1:10)
plot(x = x,y = y)
lines(x,y)
y <- sqrt(1:10)
plot(x = x,y = y)
lines(x,y)
x <- 1:10
y <- log(1:10)
plot(x = x,y = y)
lines(x,y)
x <- 1:10
y <- log2(1:10)
x <- 1:10
y <- sqrt(1:10)
plot(x = x,y = y)
lines(x,y)
x <- 1:16
y <- sqrt(1:16)
plot(x = x,y = y)
lines(x,y)
2 >  2  # MAIOR QUE
2 < 2   # MENOR QUE
2 == 3  # IGUALDADE
2 >= 2 # MAIOR OU IGUAL
x = 1:10
x <- 1:10
"eu" == "todo mundo" # Igualdade
"eu" == "eu"
"eu" != "vc"         # Diferença
# Teste em grupo
"eu" %in% c("vc","todo mundo") # Generalização - se contém
!("eu" %in% c("vc","todo mundo"))
# 4. Relações "OU" e "E" ----
# "|" para "OU"
2 > 2 | 2 == 2
2 > 2 | 2 < 2
# "&" para "E"
2 > 2 & 2 == 2
2 > 1 & 2 == 2
if(2 > 3){"Não sei lógica"}else{"Sei lógica!"} # Teste executar apenas
# a primeira parte
TRUE+TRUE+FALSE
true_igual_um <- c(T,T,T,F)
true_igual_um + 1
a=1
while (a<=10)  {
a=a+1
print (a)
}
2 >  2  # MAIOR QUE
2 >  2  # MAIOR QUE
j <- c(1.20,3.2,2.2,3.4)
x <- c(2L,4L,4L,6L)
y <- c("Fulano","Ciclano","Beltrano","Tetrano")
z <- c(TRUE,FALSE,TRUE,FALSE)
class(j)
class(x)
class(y)
class(z)
t <- c(1,2,"Fulano",FALSE)
class(t)
w <- c(j,x,y,z)
w # observe o que compõe o vetor "w"
class(w)
2+2
2*2
x = 1:10
x + 2
library(readr)
dados_inventados <- read_csv("G:/Meu Drive/00 GitHub/R-Introduction/A01 - Intro/00 data/meus_dados.csv",
skip = 1)
View(dados_inventados)
View(dados_inventados)
pedro = "Monitor excelente"
julia = "Monitora espetacular"
x = 1:10
pedro
julia
victor
x = 10L
x = 120.2L
x = 10L
class(x)
x = 120.2L
class(x)
y
programacao
programacao <- "Qualquer coisa"
programacao
valores <- (10,20,30,40)
valores <- c(10,20,30,40)
valores
pedro = Monitor excelente
# Aqui estamos guardando de 1 a 10 no objeto x
x = 1:10
x = "Pedro"
getwd()
setwd("G:/Meu Drive/00 GitHub/R-Introduction/A01 - Intro")
getwd()
dir()
dir.create(path = "pasta nova")
dir()
"Julia é uma monitora excelente, minha nota para ela é"
frase = "Julia é uma monitora excelente, minha nota para ela é"
frase
x = 10
paste(frase,x)
x = c(10,100,1000)
paste(frase,x)
paste0(frase,x)
paste("Minha nota para a meios é",x)
wd <- "G:/Meu Drive/00 GitHub/R-Introduction/A01 - Intro/00 data"
wd
wd
paste(wd,"/meus_dados.csv")
read.csv(file = paste0(wd,"/meus_dados.csv"))
cores = c("Azul","Preto","Amarelo")
cores = c("Azul","Preto","Amarelo")
cores = c(cores)
cores
cores = c(cores,10)
cores
educ = c( 12, 9, 12, 9,17 )
rend = c( 2500, 900,2000,1200,6800)
raca = c( “branca”, “indígena”, “parta”, “preta”,”branca”)
raca = c( 'branca', 'indigena', 'parta', 'preta','branca')
base <- data.frame(educ,rend,raca)
View(base)
educ[2]
educ + rend
educ
rend
educ + rend
# Este é um comentário
